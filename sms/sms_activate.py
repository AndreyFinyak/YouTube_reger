import requests
import os
import time
import sys
import traceback
from dotenv import load_dotenv
from proxy_config.proxy_conf import get_next_proxy

load_dotenv()

# –ó–∞–≥—Ä—É–∑–∫–∞ API-–∫–ª—é—á–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_KEY = os.getenv("SMS_ACTIVATE_API_KEY")
if not API_KEY:
    print("‚ùå API-–∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω —É–∫–∞–∑–∞–Ω –≤ —Ñ–∞–π–ª–µ .env.")
    sys.exit(1)

BASE_URL = "https://sms-activate.org/stubs/handler_api.php"

host, port, login, password = get_next_proxy().split(":")
proxies = {
    'http': f'http://{login}:{password}@{host}:{port}',
    'https': f'http://{login}:{password}@{host}:{port}',
}


def get_phone_number(service="go", country=6, max_price=0.15):
    try:
        response = requests.get(
            BASE_URL,
            params={
                "api_key": API_KEY,
                "action": "getNumber",
                "service": service,
                "country": country,
                "maxPrice": max_price
            }, proxies=proxies
        )
        if response.status_code == 200:
            result = response.text
            print(f"üëâ –û—Ç–≤–µ—Ç –æ—Ç SMS-–∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {result}")

            if result.startswith("ACCESS_NUMBER"):
                parts = result.split(":")
                if len(parts) >= 3:
                    activation_id = parts[1]
                    phone_number = parts[2]
                    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –Ω–æ–º–µ—Ä: {phone_number}, ID –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {activation_id}")
                    return activation_id, phone_number
                else:
                    print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: {result}")
            elif result.startswith("NO_NUMBERS"):
                print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤.")
            elif result.startswith("NO_BALANCE"):
                print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ.")
            else:
                print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {result}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞: {e}")
        traceback.print_exc()
    return None

def set_status(activation_id, status):
    try:
        response = requests.get(
            BASE_URL,
            params={
                "api_key": API_KEY,
                "action": "setStatus",
                "id": activation_id,
                "status": status
            }, proxies=proxies
        )
        if response.status_code == 200:
            result = response.text
            print(f"üëâ –û—Ç–≤–µ—Ç –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å—Ç–∞—Ç—É—Å–∞: {result}")
            if result in ["ACCESS_READY", "ACCESS_CANCEL", "ACCESS_ACTIVATION"]:
                print(f"‚úÖ –°—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {status}")
                return True
            else:
                print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {result}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        traceback.print_exc()
    return False

def acquire_phone(service="go", country=6):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –µ–≥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø—Ä–∏—ë–º—É SMS.

    :param service: –ö–æ–¥ —Å–µ—Ä–≤–∏—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'go' –¥–ª—è Google)
    :param country: –ö–æ–¥ —Å—Ç—Ä–∞–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, 6 ‚Äî –ò–Ω–¥–æ–Ω–µ–∑–∏—è)
    :return: –ö–æ—Ä—Ç–µ–∂ (activation_id, phone_number) –∏–ª–∏ None –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    """
    result = get_phone_number(service=service, country=country)
    if result:
        activation_id, phone_number = result
        success = set_status(activation_id, 1)  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ "–ì–æ—Ç–æ–≤"
        if success:
            return activation_id, phone_number
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å. –û—Ç–º–µ–Ω—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é...")
            set_status(activation_id, 3)  # –û—Ç–º–µ–Ω–∞
    return None

def get_sms_code(activation_id, timeout=150):
    """
    –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è SMS-–∫–æ–¥–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.

    :param activation_id: ID –∞–∫—Ç–∏–≤–∞—Ü–∏–∏, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –Ω–æ–º–µ—Ä–∞
    :param timeout: –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2.5 –º–∏–Ω—É—Ç—ã)
    :return: –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ None, –µ—Å–ª–∏ –∫–æ–¥ –Ω–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω
    """
    print(f"üëâ –û–∂–∏–¥–∞–Ω–∏–µ SMS-–∫–æ–¥–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ ID: {activation_id} (–¥–æ {timeout} —Å–µ–∫—É–Ω–¥)...")
    start_time = time.time()

    while time.time() - start_time < timeout:
        try:
            response = requests.get(
                BASE_URL,
                params={
                    "api_key": API_KEY,
                    "action": "getStatus",
                    "id": activation_id
                }, proxies=proxies)

            if response.status_code == 200:
                result = response.text
                print(f"üëâ –û—Ç–≤–µ—Ç –æ—Ç SMS-–∞–∫—Ç–∏–≤–∞—Ü–∏–∏: {result}")

                if result.startswith("STATUS_OK"):
                    # –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω
                    sms_code = result.split(":")[1]
                    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω SMS-–∫–æ–¥: {sms_code}")
                    return sms_code
                elif result == "STATUS_WAIT_CODE":
                    # –ö–æ–¥ –µ—â—ë –Ω–µ –ø–æ–ª—É—á–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ
                    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ SMS-–∫–æ–¥–∞...")
                elif result == "STATUS_CANCEL":
                    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞
                    print("‚ùå –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
                    break
                elif result == "STATUS_ERROR":
                    # –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
                    print("‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.")
                    break
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ SMS-–∫–æ–¥–∞: {e}")

        # –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
        time.sleep(7)

    # –ï—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ, –æ—Ç–º–µ–Ω—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é
    print("‚ùå –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ö–æ–¥ –Ω–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω.")
    print("üëâ –û—Ç–∫–∞–∑ –æ—Ç –Ω–æ–º–µ—Ä–∞...")
    set_status(activation_id, 3)  # –û—Ç–º–µ–Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    return None
